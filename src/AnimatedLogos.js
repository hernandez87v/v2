/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef, useState, useEffect } from 'react'
import { useFrame } from 'react-three-fiber'
import { useGLTF } from '@react-three/drei/useGLTF'
import { AnimationMixer } from 'three';

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/animatedLogos.glb')

  const actions = useRef()
  const [mixer] = useState(() => new AnimationMixer())
  useFrame((state, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      'React-BackgroundAction': mixer.clipAction(animations[0], group.current),
      appBackgroundAction: mixer.clipAction(animations[1], group.current),
      HTML5Action: mixer.clipAction(animations[2], group.current),
      css3Action: mixer.clipAction(animations[3], group.current),
      BezierCircleAction: mixer.clipAction(animations[4], group.current),
    }
    return () => animations.forEach((clip) => mixer.uncacheClip(clip))
  }, [])
  return (
    <group ref={group} {...props} dispose={null}>
      <group
        position={[0, 9, 0]}
        rotation={[0, -Math.PI / 2, 0]}
        scale={[1.19, 1.19, 1.19]}
        userData={{ name: 'React-Background' }}
      >
        <mesh
          onClick={(e) => actions.current.['React-BackgroundAction'].play()}
          material={materials.darkBlue}
          geometry={nodes.reactBackground.geometry}
        />
        <mesh
          material={materials.cyan}
          geometry={nodes.reactBackground_1.geometry}
        />
      </group>
      <mesh
        material={materials['Material.003']}
        geometry={nodes.appBackground.geometry}
        position={[18.89, 9, 0]}
        rotation={[0, -Math.PI / 2, 0]}
        scale={[0.67, 8, 8]}
        userData={{ name: 'appBackground' }}
      />
      <group
        position={[-37.31, 1.08, 0]}
        scale={[2.31, 2.31, 2.31]}
        userData={{ name: 'HTML5' }}
      >
        {/* <mesh onClick={(e) => actions.current.HTML5Action.play()} /> */}
        <mesh
          onClick={(e) => actions.current.HTML5Action.play()}
          material={materials.outerOrange}
          geometry={nodes.html5.geometry}
        />
        <mesh
          material={materials.innerOrange}
          geometry={nodes.html5_1.geometry}
        />
        <mesh material={materials.five} geometry={nodes.html5_2.geometry} />
      </group>
      <group
        position={[-21.96, 1.08, 0]}
        scale={[2.31, 2.31, 2.31]}
        userData={{ name: 'css3' }}
      >
        <mesh material={materials.white} geometry={nodes.css3_1.geometry} />
        <mesh material={materials.outerBlue} geometry={nodes.css3_2.geometry} />
        <mesh material={materials.innerBlue} geometry={nodes.css3_3.geometry} />
      </group>
    </group>
  );
}

useGLTF.preload('/animatedLogos.glb')
